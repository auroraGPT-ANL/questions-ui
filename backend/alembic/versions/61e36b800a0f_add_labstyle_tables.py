"""add labstyle tables

Revision ID: 61e36b800a0f
Revises: 47c2ad9d74df
Create Date: 2025-02-15 22:22:05.980869

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '61e36b800a0f'
down_revision: Union[str, None] = '47c2ad9d74df'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_experience_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ai_skill_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ai_skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('skill_category_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['skill_category_id'], ['ai_skill_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('author_experience',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('ai_experience_level_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ai_experience_level_id'], ['ai_experience_level.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('final_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('overall_id', sa.Integer(), nullable=False),
    sa.Column('novelty_id', sa.Integer(), nullable=False),
    sa.Column('productivity_id', sa.Integer(), nullable=False),
    sa.Column('teamwork_id', sa.Integer(), nullable=False),
    sa.Column('completeness_id', sa.Integer(), nullable=False),
    sa.Column('overall_justification', sa.String(), nullable=False),
    sa.Column('novelty_justification', sa.String(), nullable=False),
    sa.Column('productivity_justification', sa.String(), nullable=False),
    sa.Column('teamwork_justification', sa.String(), nullable=False),
    sa.Column('completeness_justification', sa.String(), nullable=False),
    sa.Column('productivity_improvement', sa.String(), nullable=False),
    sa.Column('event_improvement', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['completeness_id'], ['ai_skill.id'], ),
    sa.ForeignKeyConstraint(['novelty_id'], ['ai_skill.id'], ),
    sa.ForeignKeyConstraint(['overall_id'], ['ai_skill.id'], ),
    sa.ForeignKeyConstraint(['productivity_id'], ['ai_skill.id'], ),
    sa.ForeignKeyConstraint(['teamwork_id'], ['ai_skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('preliminary_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('experience_id', sa.Integer(), nullable=False),
    sa.Column('difficulty_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['difficulty_id'], ['ai_skill.id'], ),
    sa.ForeignKeyConstraint(['experience_id'], ['ai_skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('preliminary_evaluation_id', sa.Integer(), nullable=True),
    sa.Column('final_evaluation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['final_evaluation_id'], ['final_evaluation.id'], ),
    sa.ForeignKeyConstraint(['preliminary_evaluation_id'], ['preliminary_evaluation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment_turn',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('previous_turn_id', sa.Integer(), nullable=True),
    sa.Column('output', sa.String(), nullable=False),
    sa.Column('goal', sa.String(), nullable=False),
    sa.Column('prompt', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment_log.id'], ),
    sa.ForeignKeyConstraint(['previous_turn_id'], ['experiment_turn.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment_turn_evaluation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('turn_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('skill_comments', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['ai_skill.id'], ),
    sa.ForeignKeyConstraint(['turn_id'], ['experiment_turn.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment_turn_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('turn_id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['turn_id'], ['experiment_turn.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('experiment_turn_files')
    op.drop_table('experiment_turn_evaluation')
    op.drop_table('experiment_turn')
    op.drop_table('experiment_log')
    op.drop_table('preliminary_evaluation')
    op.drop_table('final_evaluation')
    op.drop_table('author_experience')
    op.drop_table('ai_skill')
    op.drop_table('ai_skill_category')
    op.drop_table('ai_experience_level')
    # ### end Alembic commands ###
